// <auto-generated />
using System;
using System.Collections.Generic;
using CollageMangmentSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CollageMangmentSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250429165721_courseV3")]
    partial class courseV3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CollageMangmentSystem.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CollageMangmentSystem.Core.Entities.course.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uuid");

                    b.Property<int>("CreditHours")
                        .HasColumnType("integer");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.PrimitiveCollection<List<Guid>>("PrerequisiteCourseIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<int?>("Semester")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CollageMangmentSystem.Core.Entities.department.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HDDID")
                        .HasColumnType("text");

                    b.Property<Guid?>("HDDId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HDDId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CollageMangmentSystem.Core.Entities.course.Course", b =>
                {
                    b.HasOne("CollageMangmentSystem.Core.Entities.course.Course", null)
                        .WithMany("PrerequisiteCourses")
                        .HasForeignKey("CourseId");

                    b.HasOne("CollageMangmentSystem.Core.Entities.department.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CollageMangmentSystem.Core.Entities.department.Department", b =>
                {
                    b.HasOne("CollageMangmentSystem.Core.Entities.User", "HDD")
                        .WithMany()
                        .HasForeignKey("HDDId");

                    b.Navigation("HDD");
                });

            modelBuilder.Entity("CollageMangmentSystem.Core.Entities.course.Course", b =>
                {
                    b.Navigation("PrerequisiteCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
